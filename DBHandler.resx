<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>